<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="device_forever" id="-BS}gdM]~8}smuj~Ef3i" x="855" y="0"></block><block type="pxt-on-start" id="Ll:1FYej%]PyGo*|LqK-" x="38" y="57"><statement name="HANDLER"><block type="typescript_statement" id="r/N[n}2`;*|lJkBJ{bmv"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace ledmatrix {" line1="    let ccolors = [0xff0000, 0xFF7F00, 0xFFFE00, 0x7FFF00, 0x00FF00, 0x00FF7F," line2="        0x00FFFE, 0x0040FF, 0x0000FF, 0x6000FF, 0xFE00FF, 0xFF0040]" line3="    " line4="    let size = 8;" line5="" line6="    let strip = neopixel.create(DigitalPin.C8, 64, NeoPixelMode.RGB)" line7="" line8="    function byteToHex(n: number) {" line9="        const hexChars = &quot;0123456789ABCDEF&quot;;" line10="        const high = Math.floor(n / 16);" line11="        const low = n % 16;" line12="        return hexChars.charAt(high) + hexChars.charAt(low);" line13="    }" line14="" line15="    function hexStringToNumber(hexString: string) {" line16="        let result = 0;" line17="        for (let i = 0; i &lt; 6; i++) {" line18="            const digit = hexString.charCodeAt(i);" line19="            let value;" line20="            if (digit &gt;= 48 &amp;&amp; digit &lt;= 57) {         // '0'–'9'" line21="                value = digit - 48;" line22="            } else if (digit &gt;= 65 &amp;&amp; digit &lt;= 70) {  // 'A'–'F'" line23="                value = digit - 55;" line24="            } else if (digit &gt;= 97 &amp;&amp; digit &lt;= 102) { // 'a'–'f'" line25="                value = digit - 87;" line26="            } else {" line27="                value = 0; // Fallback für ungültige Zeichen" line28="            }" line29="            result = result * 16 + value;" line30="        }" line31="        return result;" line32="    }" line33="" line34="    function grayHexNumber(value: number) {" line35="        // Auf gültigen Bereich runden und begrenzen" line36="        let v = Math.round(value);" line37="        if (v &lt; 0) v = 0;" line38="        if (v &gt; 255) v = 255;" line39="" line40="        // Drei identische Bytes für Grau zusammenbauen" line41="        const h = byteToHex(v);" line42="        const hexString = h + h + h;" line43="" line44="        // Manuell in Zahl umwandeln (hex zu dezimal)" line45="        return hexStringToNumber(hexString)" line46="    }" line47="" line48="    //% blockId=LedMatrixShow block=&quot;show array on leds&quot;" line49="    //% block.loc.de=&quot;zeige Array auf LEDs&quot;" line50="    export function show(array: any[]) {" line51="        if (array.length == 25) {" line52="            let leds = ``" line53="            for (let index = 0; index &lt; 25; index++) {" line54="                if (typeof array[index] == &quot;number&quot;) {" line55="                    // Auf gültigen Bereich runden und begrenzen" line56="                    let w = Math.round(array[index]);" line57="                    if (w &lt; 0) w = 0;" line58="                    if (w &gt; 255) w = 255;" line59="                    led.plotBrightness(Math.floor(index / 5), index % 5, w)" line60="                } else if (typeof array[index] == &quot;string&quot;) {" line61="                    led.plotBrightness(Math.floor(index / 5), index % 5, 0)" line62="                }" line63="            }" line64="        } else if (array.length == 64) {" line65="            for (let index2 = 0; index2 &lt; 64; index2++) {" line66="                if (typeof array[index2] == &quot;number&quot;) {" line67="                    strip.setPixelColor(index2, grayHexNumber(array[index2]))" line68="                } else if (typeof array[index2] == &quot;string&quot;) {" line69="                    strip.setPixelColor(index2, hexStringToNumber(array[index2]))" line70="                }" line71="            }" line72="            strip.show()" line73="        } else {" line74="            basic.showString(&quot;Arraygröße nicht unterstützt!&quot;)" line75="        }" line76="    }" line77="" line78="    export function showBlack() {" line79="        strip.showColor(neopixel.colors(NeoPixelColors.Black))" line80="        strip.show()" line81="    }" line82="" line83="}" numlines="84"></mutation><next><block type="typescript_statement" id="82/I[XdsGej(W*@/1t`l"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="ledmatrix.showBlack()" numlines="1"></mutation></block></next></block></statement></block></xml>